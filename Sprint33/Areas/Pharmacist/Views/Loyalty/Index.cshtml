@model Sprint33.Areas.Pharmacist.Models.LoyaltyModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Pharmacist/Views/Shared/_Layout.cshtml";
}

<!--Loyalty Preferences-->
<div class="card shadow h-100 py-2">
    <div class="card-body">
        @using (Html.BeginForm("Update", "Loyalty", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="card-header py-3">
                <h4 class="m-0 font-weight-bold text-primary">Loyalty Preferences</h4>
            </div>
            <br />

            <h4 class="mb-4 font-weight-bold text-center mx-5">Customers will receive a coupon once they reach the point limit if they are a loyalty member
                <span>
                    <img src="https://img.icons8.com/officexs/16/000000/diakonisches-werk.png" />
                </span></h4>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                <label class="control-label col-md-12" for="PointsLimit">Loyalty Points needed to receive a coupon</label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PointsLimit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PointsLimit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-12" for="PointsLimit">Code for the coupon</label>
                <div class="d-inline-block ml-3">
                    @Html.EditorFor(model => model.CouponCode, new { htmlAttributes = new { @placeholder = "slug(optional)" } })
                    <label class="control-label" for="Slug"
                           style="text-align: right; clear: both; float: right; margin-right: 7px; margin-top: 4px;">
                        -[CustomerId]-[OrderId]
                    </label>
                    @Html.ValidationMessageFor(model => model.CouponCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-12" for="PointsLimit">Discount Rate of coupon (0-100%)</label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.CouponDiscountRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CouponDiscountRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-12" for="PointsLimit">Months for coupon to expire</label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.MonthsToExpiry, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MonthsToExpiry, "", new { @class = "text-danger" })
                </div>
            </div>

            <!--Email Template-->
            <div class="card-body">
                <div class="card-header py-3">
                    <h4 class="m-0 font-weight-bold">
                        <a data-toggle="collapse" class="panel-carret" href="#collapse1">
                            <span class="pull-left fa fa-play fa-rotate-90 mt-1"></span>
                            Email Template
                        </a>
                    </h4>
                </div>
                <div id="collapse1" class="panel-collapse collapse in">
                    <div class="panel-body">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label " })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Body, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update" class="btn btn-success" />
                </div>
            </div>
        </div>
        }
    </div>
</div>

@section Scripts {

    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.replace("Body");
    </script>
    
    <script>

        $(function() {

            /*
             * Rotate fa-play in panel on click
             */

            $(".panel-carret").click(function (e) {
                $(this).toggleClass("pressed");
                $(this).children("fa-play").toggleClass("fa-rotate-90");
                e.preventDefault();
            });

        });

    </script>
}