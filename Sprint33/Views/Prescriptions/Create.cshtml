@model Sprint33.Models.CreatePrescriptionModel

@{
    ViewBag.Title = "Created";
    Layout = "~/Views/SharedTemp/_MySharedHome.cshtml";
}

<div class="container my-5">
    <div class="row">
        <div class="col-md-6">

            <h2 class="mb-3">Prescription for @Model.Patient.FirstName</h2>

            @*<h4 class="font-weight-bold text-center">Add Medicine to Presicription</h4>*@

            @using (Html.BeginForm("AddDetail", "Prescriptions", FormMethod.Post, new { @class = "mx-5" }))
            {
                @Html.HiddenFor(model => model.PatientID)
                <div class="form-group">
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MedicineName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Medicine Name" } })
                        @Html.ValidationMessageFor(model => model.MedicineName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PackSize, new { htmlAttributes = new { @class = "form-control", @placeholder = "Pack Size (eg. 100g)" } })
                        @Html.ValidationMessageFor(model => model.PackSize, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Instructions, new { htmlAttributes = new { @class = "form-control", @placeholder = "Instructions" } })
                        @Html.ValidationMessageFor(model => model.PackSize, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-info">
                            <i class="fa fa-list"></i>
                            Add To List
                        </button>
                    </div>
                </div>
            }

        </div>

        <div class="col-md-6">
            <h4 class="my-4">R<sub>x</sub></h4>
            <hr />
            <table class="text-center table" width="100%">
                <thead class="table-success">
                    <tr>
                        <th>Detail</th>
                        <th>Instructions</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.PrescriptionDetails)
                    {
                        <tr class="bg-white">
                            <td>@item.MedicineName, @item.PackSize</td>
                            <td>@item.Instructions</td>
                            <td>
                                <button class="remove-detail btn btn-danger btn-sm">
                                    <i class="fa fa-times"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>

    <div class="row mt-3">

        <div class="col-md-12">

            @using (Html.BeginForm("Complete", "Prescriptions", FormMethod.Post, new { @class = "mx-5" }))
            {

                <div class="form-group mb-5">
                    <label class="control-label" for="Signature">Doctor Signature: </label>
                    <div class="signature-pad"
                         style="display:block;
                                width: 300px;
                                height: 150px;
                                margin-bottom: 5px;
                                border: 1px solid black;">
                        <canvas class="panel panel-default"></canvas>
                        <br />
                        <button type="button" class="btn btn-danger btn-sm btn-clear-canvas">Clear</button>
                        @Html.HiddenFor(model => model.Signature, ViewData["htmlAttributes"])
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        <input class="form-control text-box single-line" data-val="true"
                               data-val-date="The field ExpiryDate must be a date."
                               data-val-required="The ExpiryDate field is required."
                               id="ExpiryDate" name="ExpiryDate" placeholder="Instructions" type="date">
                        @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="button" class="btn btn-success submit" data-patientId="@Model.PatientID">
                            <i class="fa fa-check"></i>
                            Submit
                        </button>
                    </div>
                </div>
            }
        </div>

    </div>

</div>

@section scripts {
    <script>

        var signaturePadWrappers = document.querySelectorAll('.signature-pad');

        Array.prototype.forEach.call(signaturePadWrappers, function (wrapper) {
            var canvas = wrapper.querySelector('canvas');
            var clearButton = wrapper.querySelector('.btn-clear-canvas');
            var hiddenInput = wrapper.querySelector('input[type="hidden"]');

            var signaturePad = new SignaturePad(canvas);

            // Read base64 string from hidden input
            var base64str = hiddenInput.value;

            if (base64str) {
                // Draws signature image from data URL
                signaturePad.fromDataURL('data:image/png;base64,' + base64str);
            }

            if (hiddenInput.disabled) {
                signaturePad.off();
            } else {
                signaturePad.onEnd = function () {
                    // Returns signature image as data URL and set it to hidden input
                    base64str = signaturePad.toDataURL().split(',')[1];
                    hiddenInput.value = base64str;
                };

                clearButton.addEventListener('click', function () {
                    // Clear the canvas and hidden input
                    signaturePad.clear();
                    hiddenInput.value = '';
                });
            }
        });

        $(function () {

            $('button.submit').click(function () {

                var patientId = $(this).attr("data-patientId");
                var signature = $('#Signature').val();
                var expiryDate = $('#ExpiryDate').val();
                var url = "/Prescriptions/Complete";

                $.post(url,
                    {
                        PatientID: patientId,
                        ExpiryDate: expiryDate,
                        Signature: signature,
                        MedicineName: 's',
                        PackSize: 's',
                        Instructions: 's',
                        ProductId: 1,
                        Quantity: 1
                    }, function (data) {
                        if (data == "Failes") {
                            location.reload();
                        }
                        else {
                            location.href = "/Prescriptions/ViewPrescription?id=" + data;
                        }
                    });

            });

        });

    </script>


}